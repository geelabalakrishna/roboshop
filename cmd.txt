docker network create roboshop

docker network ls 


docker build -t gbalakrishna/mongodb:v.0.0.1 .

docker run -d --name mongodb --network=roboshop gbalakrishna/mongodb:v.0.0.1

docker build -t gbalakrishna/catalogue:v.0.0.1 .

docker run -d --name catalogue --network=roboshop gbalakrishna/catalogue:v.0.0.1


docker build -t gbalakrishna/web:v.0.0.1 . 

docker run -d -p 80:80 --name web --network roboshop gbalakrishna/web:v.0.0.1


docker container stop $(docker ps -aq)
docker container rm $(docker ps -aq)
docker image rm $(docker image ls -q)



docker exec -it catalogue --bash

ping mongodb

Docker images are pretty minimal, but you can install ping in your official ubuntu docker image via

apt-get update -y
apt-get install -y iputils-ping




docker network create --driver=bridge roboshop



FROM mongo:5
COPY *.js /docker-entrypoint-initdb.d/


catalogue.js
//
// Products
//
db = db.getSiblingDB('catalogue');
db.products.insertMany([
    {sku: 'Watson', name: 'Watson', description: 'Probably the smartest AI on the planet', price: 2001, instock: 2, categories: ['Artificial Intelligence']},
    {sku: 'Ewooid', name: 'Ewooid', description: 'Fully sentient assistant', price: 200, instock: 0, categories: ['Artificial Intelligence']},
    {sku: 'HPTD', name: 'High-Powered Travel Droid', description: 'Traveling to the far reaches of the Galaxy? You need this for protection. Comes in handy when you are lost in space', price: 1200, instock: 12, categories: ['Robot']},
    {sku: 'UHJ', name: 'Ultimate Harvesting Juggernaut', description: 'Extraterrestrial vegetation harvester', price: 5000, instock: 10, categories: ['Robot']},
    {sku: 'EPE', name: 'Extreme Probe Emulator', description: 'Versatile interface adapter for hacking into systems', price: 953, instock: 1, categories: ['Robot']},
    {sku: 'EMM', name: 'Exceptional Medical Machine', description: 'Fully automatic surgery droid with exceptional bedside manner', price: 1024, instock: 1, categories: ['Robot']},
    {sku: 'SHCE', name: 'Strategic Human Control Emulator', description: 'Diplomatic protocol assistant', price: 300, instock: 12, categories: ['Robot']},
    {sku: 'RED', name: 'Responsive Enforcer Droid', description: 'Security detail, will gaurd anything', price: 700, instock: 5, categories: ['Robot']},
    {sku: 'RMC', name: 'Robotic Mining Cyborg', description: 'Excellent tunneling capability to get those rare minerals', price: 42, instock: 48, categories: ['Robot']},
    {sku: 'STAN-1', name: 'Stan', description: 'Observability guru', price: 67, instock: 1000, categories: ['Robot', 'Artificial Intelligence']},
    {sku: 'CNA', name: 'Cybernated Neutralization Android', description: 'Is your spaceship a bit whiffy? This little fellow will bring a breath of fresh air', price: 1000, instock: 0, categories: ['Robot']}
]);

// full text index for searching
db.products.createIndex({
    name: "text",
    description: "text"
});

// unique index for product sku
db.products.createIndex(
    { sku: 1 },
    { unique: true }
);




users.js

//
// Products
//
db = db.getSiblingDB('users');
db.users.insertMany([
    {name: 'user', password: 'password', email: 'user@me.com'},
    {name: 'stan', password: 'bigbrain', email: 'stan@instana.com'},
    {name: 'partner-57', password: 'worktogether', email: 'howdy@partner.com'}
]);

// unique index on the name
db.users.createIndex(
    {name: 1},
    {unique: true}
);







podman build -t gbalakrishna/mongodb:v.0.0.1 .



FROM node:14

EXPOSE 8080

WORKDIR /opt/server

COPY package.json /opt/server/

# npm install get the dependencies of node js project
RUN npm install 
ENV MONGO=true

COPY server.js /opt/server/

ENTRYPOINT ["node", "server.js"]










 docker network create \
  --driver=bridge \
  --subnet=172.28.0.0/16 \
  --ip-range=172.28.5.0/24 \
  --gateway=172.28.5.254 \
  br0

docker network create --driver=bridge roboshop






docker network create roboshop

docker network ls 


docker build -t gbalakrishna/mongodb:v.0.0.1 .

docker run -d --name mongodb --network=roboshop gbalakrishna/mongodb:v.0.0.1

docker build -t gbalakrishna/catalogue:v.0.0.1 .

docker run -d --name catalogue --network=roboshop gbalakrishna/catalogue:v.0.0.1


docker build -t gbalakrishna/web:v.0.0.1 . 

docker image push gbalakrishna/web:v.0.0.1 .

docker run -d -p 80:80 --name web --network roboshop gbalakrishna/web:v.0.0.1

01 catalogue
10 user
11 cart

docker build -t gbalakrishna/user:v.0.0.1 .


docker build -t gbalakrishna/cart:v.0.0.1 .
docker run -d --name cart --network=roboshop gbalakrishna/cart:v.0.0.1

docker build -t gbalakrishna/mysql:v.0.0.1 .

docker run -d --name mysql --network=roboshop gbalakrishna/mysql:v.0.0.1

docker build -t gbalakrishna/shipping:v.0.0.1 .

docker run -d --name mysql --network=roboshop gbalakrishna/shipping:v.0.0.1



docker run -d --name mongodb --network=roboshop gbalakrishna/mongodb:v.0.0.1
docker run -d --name catalogue --network=roboshop gbalakrishna/catalogue:v.0.0.1
docker run -d -p 80:80 --name web --network roboshop gbalakrishna/web:v.0.0.1
docker run -d --name redis --network=roboshop gbalakrishna/redis:v.0.0.1
docker run -d --name user --network=roboshop gbalakrishna/user:v.0.0.1




 docker run -d --name redis --network=roboshop redis




docker run -d -p 80:80 --name web --network roboshop gbalakrishna/web:v.0.0.1
docker run -d --name user --network=roboshop gbalakrishna/user:v.0.0.1

docker run -d --name redis --network=roboshop gbalakrishna/redis:v.0.0.1


docker container stop $(docker ps -aq)
docker container rm $(docker ps -aq)
docker image rm $(docker image ls -q)


docker exec -it web bash
curl catalogue:8080/categories

curl localhost/api/catalogue/categories




/usr/share/nginx/html/





docker exec -it catalogue --bash

ping mongodb

Docker images are pretty minimal, but you can install ping in your official ubuntu docker image via

apt-get update -y
apt-get install -y iputils-ping



docker run -d --name mongodb --network=roboshop gbalakrishna/mongodb:v.0.0.1
docker run -d --name catalogue --network=roboshop gbalakrishna/catalogue:v.0.0.1
docker run -d --name redis --network=roboshop gbalakrishna/redis:v.0.0.1
docker run -d --name user --network=roboshop gbalakrishna/user:v.0.0.1
docker run -d -p 80:80 --name web --network roboshop gbalakrishna/web:v.0.1.0





