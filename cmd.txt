docker network create roboshop

docker network ls 


docker build -t gbalakrishna/mongodb:v.0.0.1 .

docker run -d --name mongodb --network=roboshop gbalakrishna/mongodb:v.0.0.1

docker build -t gbalakrishna/catalogue:v.0.0.1 .

docker run -d --name catalogue --network=roboshop gbalakrishna/catalogue:v.0.0.1


docker build -t gbalakrishna/web:v.0.0.1 . 

docker run -d -p 80:80 --name web --network roboshop gbalakrishna/web:v.0.0.1


docker container stop $(docker ps -aq)
docker container rm $(docker ps -aq)
docker image rm $(docker image ls -q)



docker exec -it catalogue --bash

ping mongodb

Docker images are pretty minimal, but you can install ping in your official ubuntu docker image via

apt-get update -y
apt-get install -y iputils-ping




docker network create --driver=bridge roboshop




 docker network create \
  --driver=bridge \
  --subnet=172.28.0.0/16 \
  --ip-range=172.28.5.0/24 \
  --gateway=172.28.5.254 \
  br0

docker network create --driver=bridge roboshop






docker network create roboshop

docker network ls 


docker build -t gbalakrishna/mongodb:v.0.0.1 .

docker run -d --name mongodb --network=roboshop gbalakrishna/mongodb:v.0.0.1

docker build -t gbalakrishna/catalogue:v.0.0.1 .

docker run -d --name catalogue --network=roboshop gbalakrishna/catalogue:v.0.0.1


docker build -t gbalakrishna/web:v.0.0.1 . 

docker image push gbalakrishna/web:v.0.0.1 .

docker run -d -p 80:80 --name web --network roboshop gbalakrishna/web:v.0.0.1

01 catalogue
10 user
11 cart
100 shipping
101 payment
docker build -t gbalakrishna/user:v.0.0.1 .


docker build -t gbalakrishna/cart:v.0.0.1 .
docker run -d --name cart --network=roboshop gbalakrishna/cart:v.0.0.1

docker build -t gbalakrishna/mysql:v.0.0.1 .

docker run -d --name mysql --network=roboshop gbalakrishna/mysql:v.0.0.1

docker build -t gbalakrishna/shipping:v.0.0.1 .

docker run -d --name mysql --network=roboshop gbalakrishna/shipping:v.0.0.1



docker run -d --name mongodb --network=roboshop gbalakrishna/mongodb:v.0.0.1
docker run -d --name catalogue --network=roboshop gbalakrishna/catalogue:v.0.0.1
docker run -d -p 80:80 --name web --network roboshop gbalakrishna/web:v.0.0.1
docker run -d --name redis --network=roboshop gbalakrishna/redis:v.0.0.1
docker run -d --name user --network=roboshop gbalakrishna/user:v.0.0.1




 docker run -d --name redis --network=roboshop redis




docker run -d -p 80:80 --name web --network roboshop gbalakrishna/web:v.0.0.1
docker run -d --name user --network=roboshop gbalakrishna/user:v.0.0.1

docker run -d --name redis --network=roboshop gbalakrishna/redis:v.0.0.1


docker container stop $(docker ps -aq)
docker container rm $(docker ps -aq)
docker image rm $(docker image ls -q)


docker exec -it web bash
curl catalogue:8080/categories

curl localhost/api/catalogue/categories




/usr/share/nginx/html/





docker exec -it catalogue --bash

ping mongodb

Docker images are pretty minimal, but you can install ping in your official ubuntu docker image via

apt-get update -y
apt-get install -y iputils-ping



docker run -d --name mongodb --network=roboshop gbalakrishna/mongodb:v.0.0.1
docker run -d --name catalogue --network=roboshop gbalakrishna/catalogue:v.0.0.1
docker run -d --name redis --network=roboshop gbalakrishna/redis:v.0.0.1
docker run -d --name user --network=roboshop gbalakrishna/user:v.0.0.1
docker run -d -p 80:80 --name web --network roboshop gbalakrishna/web:v.0.1.0




docker container stop $(docker ps -aq)
docker container rm $(docker ps -aq)



docker run -d --name mongodb --network=roboshop gbalakrishna/mongodb:v.0.0.1
docker run -d --name redis --network=roboshop gbalakrishna/redis:v.0.0.1
docker run -d --name mysql --network=roboshop gbalakrishna/mysql:v.0.0.1
docker run -d --name rabbitmq --network=roboshop rabbitmq


docker run -d --name catalogue --network=roboshop gbalakrishna/catalogue:v.0.0.1
docker run -d --name user --network=roboshop gbalakrishna/user:v.0.0.1
docker run -d --name cart --network=roboshop gbalakrishna/cart:v.0.0.1
docker run -d --name shipping --network=roboshop gbalakrishna/shipping:v.0.0.1
docker run -d --name payment --network=roboshop gbalakrishna/payment:v.0.0.1

docker run -d -p 80:80 --name web --network roboshop gbalakrishna/web:v.1.0.1


docker compose 

 mkdir -p ~/.docker/cli-plugins/
 curl -SL https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
 chmod +x ~/.docker/cli-plugins/docker-compose
 docker compose version

 docker compose up -d

 docker compose down 






